{"version":3,"sources":["logo.svg","components/Footer/Footer.js","pages/About/About.js","pages/HomePage/HomePage.js","components/ProjectItem/ProjectItem.js","pages/Code/Code.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","About","className","src","HomePage","href","size","icon","faLinkedin","faInstagram","faGithubSquare","ProjectItem","props","img","title","description","Code","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yJAAAA,EAAOC,QAAU,IAA0B,kC,wQCG5B,SAASC,IACtB,OACE,gCACE,6DAC8B,kBAAC,IAAD,QCHrB,SAASC,IACtB,OACE,oCACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,UAEA,sMAKA,mSAQF,6BACE,yBAAKA,UAAU,cAAcC,IAAI,8BAIvC,kBAACH,EAAD,O,0BCjBS,SAASI,IACtB,OACE,oCACE,yBAAKF,UAAU,YACb,yBAAKA,UAAU,SACb,6BACE,wBAAIA,UAAU,UAAd,qBAEF,6BACE,wBAAIA,UAAU,UAAd,4BACA,0DACA,yBAAKA,UAAU,SACb,uBAAGG,KAAK,4CACN,kBAAC,IAAD,CAAiBH,UAAU,OAAOI,KAAK,KAAKC,KAAMC,OAEpD,uBAAGH,KAAK,0CACN,kBAAC,IAAD,CACEH,UAAU,OACVI,KAAK,KACLC,KAAME,OAGV,uBAAGJ,KAAK,uCACN,kBAAC,IAAD,CACEH,UAAU,OACVI,KAAK,KACLC,KAAMG,UAMhB,kBAACT,EAAD,OAEF,kBAACD,EAAD,O,MC7CS,SAASW,EAAYC,GAClC,OACE,yBAAKV,UAAU,gBACb,yBAAKA,UAAU,QAAQC,IAAKS,EAAMC,MAClC,yBAAKX,UAAU,gBACb,wBAAIA,UAAU,SAASU,EAAME,OAC7B,uBAAGZ,UAAU,eAAeU,EAAMG,YAAlC,OCLO,SAASC,IACtB,OACE,yBAAKd,UAAU,aACb,wBAAIA,UAAU,SAAd,SACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAACS,EAAD,CACEG,MAAO,OACPC,YACE,oFAEFF,IAAK,8BCyDFI,MA9Df,WACE,OACE,kBAAC,IAAD,KACE,6BACE,4BACE,wBAAIf,UAAU,iBACZ,kBAAC,IAAD,CAAMgB,GAAG,KAAT,SAEF,wBAAIhB,UAAU,yBACZ,kBAAC,IAAD,CAAMgB,GAAG,UAAT,UAEF,wBAAIhB,UAAU,yBACZ,kBAAC,IAAD,CAAMgB,GAAG,SAAT,SAEF,wBAAIhB,UAAU,yBACZ,kBAAC,IAAD,CAAMgB,GAAG,WAAT,aAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAAClB,EAAD,OAEF,kBAAC,IAAD,CAAOkB,KAAK,SACV,kBAACH,EAAD,OAEF,kBAAC,IAAD,CAAOG,KAAK,KACV,kBAACf,EAAD,UCzBUgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2c9a0195.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\nimport \"./footer-style.css\";\nimport { FaReact } from \"../../../node_modules/react-icons/fa\";\nexport default function Footer() {\n  return (\n    <footer>\n      <span>\n        Made by Steven Barash using <FaReact />\n      </span>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport \"./about-style.css\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Footer from \"../../components/Footer/Footer\";\nexport default function About() {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"body\">\n          <div className=\"body-text\">\n            <h2 className=\"title\">about.</h2>\n\n            <p>\n              My name is Steven Barash, I will be graduating from the University\n              of Pittsburgh with B.S. in Information Science, where my\n              coursework focused on software development.\n            </p>\n            <p>\n              When I'm not coding I love trying out new recipes, photography,\n              playing my guitar, and learning languages. Besides my native\n              English, I grew up speaking Russian, took 1.5 years of Korean in\n              university, and am currently self-studying Spanish and Modern\n              Hebrew.\n            </p>\n          </div>\n          <div>\n            <img className=\"profile-pic\" src=\"/media/profile-pic.JPG\" />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import React from \"../../../node_modules/react\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport \"./homepagestyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLinkedin,\n  faInstagram,\n  faGithubSquare\n} from \"@fortawesome/free-brands-svg-icons\";\n\nimport Footer from \"../../components/Footer/Footer\";\nimport About from \"../About/About\";\n\nexport default function HomePage() {\n  return (\n    <>\n      <div className=\"homepage\">\n        <div className=\"intro\">\n          <div>\n            <h2 className=\"hey-im\">Hey. I'm Steven.</h2>\n          </div>\n          <div>\n            <h4 className=\"i-like\">I like to create things.</h4>\n            <h2>Site under construction...</h2>\n            <div className=\"icons\">\n              <a href=\"https://www.linkedin.com/in/stevenbarash\">\n                <FontAwesomeIcon className=\"icon\" size=\"2x\" icon={faLinkedin} />\n              </a>\n              <a href=\"https://www.instagram.com/stevenbarash\">\n                <FontAwesomeIcon\n                  className=\"icon\"\n                  size=\"2x\"\n                  icon={faInstagram}\n                />\n              </a>\n              <a href=\"https://www.github.com/stevenbarash\">\n                <FontAwesomeIcon\n                  className=\"icon\"\n                  size=\"2x\"\n                  icon={faGithubSquare}\n                />\n              </a>\n            </div>\n          </div>\n        </div>\n        <About />\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./ProjectItemStyle.css\";\nexport default function ProjectItem(props) {\n  return (\n    <div className=\"project-item\">\n      <img className=\"image\" src={props.img}></img>\n      <div className=\"text-section\">\n        <h1 className=\"title\">{props.title}</h1>\n        <p className=\"description\">{props.description}></p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ProjectItem from \"../../components/ProjectItem/ProjectItem\";\n\nexport default function Code() {\n  return (\n    <div className=\"container\">\n      <h2 className=\"title\">code.</h2>\n      <div className=\"body\">\n        <div className=\"body-text\">\n          <ProjectItem\n            title={\"Test\"}\n            description={\n              \"ewjfowjfojwe3foh34rh34kjfnlj4afni4fn34inf34iui34uhfivhhn34ijn3jrbi3j4rbi34riu34fh\"\n            }\n            img={\"/media/profile-pic.jpg\"}\n          ></ProjectItem>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport About from \"./pages/About/About\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Code from \"./pages/Code/Code\";\n\nfunction App() {\n  return (\n    <Router>\n      <nav>\n        <ul>\n          <li className=\"home nav-item\">\n            <Link to=\"/\">snb.</Link>\n          </li>\n          <li className=\"nav-item nav-sub-item\">\n            <Link to=\"/about\">about</Link>\n          </li>\n          <li className=\"nav-item nav-sub-item\">\n            <Link to=\"/code\">code</Link>\n          </li>\n          <li className=\"nav-item nav-sub-item\">\n            <Link to=\"/photos\">photos</Link>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/code\">\n          <Code />\n        </Route>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n    // <Router>\n    //   <nav>\n    //     <ul>\n    //       <li className=\"home nav-item\">\n    //         <Link to=\"/\">snb.</Link>\n    //       </li>\n    //       <li className=\"nav-item nav-sub-item\">\n    //         <Link to=\"/about\">about</Link>\n    //       </li>\n    //       <li className=\"nav-item nav-sub-item\">\n    //         <Link href=\"/code\">code</Link>\n    //       </li>\n    //       <li className=\"nav-item nav-sub-item\">\n    //         <Link href=\"/photos\">photos</Link>\n    //       </li>\n    //     </ul>\n    //   </nav>\n\n    //   <Switch>\n    //     <Route path=\"/about\">\n    //       <About />\n    //     </Route>\n    //     <Route path=\"/\">\n    //       <HomePage />\n    //     </Route>\n    //   </Switch>\n    // </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}